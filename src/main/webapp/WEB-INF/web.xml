<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://java.sun.com/xml/ns/javaee"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
         id="WebApp_ID" version="2.5">

    <display-name>Archetype Created Web Application</display-name>

    <!-- 设置过滤器： 过滤字符编码，对请求或响应统一设置编码 -->
    <filter>
        <filter-name>characterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>

    <!-- 过滤器将会作用于直接从客户端发送过来的以 /* 开始的请求-->
    <filter-mapping>
        <filter-name>characterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>


    <!--设置监听器-->
    <listener>
        <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
    </listener>


    <!--  ********************spring集成web环境的通用配置，一般用于加载web除层的bean，以便于其他web框架集成*************************  -->
    <!--加载spring容器配置-->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <!--设置spring容器加载配置文件路径-->
    <!--  contextConfigLocation用于加载bean的配置文件 -->


    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            classpath:applicationContext.xml
        </param-value>
    </context-param>
    <!--  *********************************************  -->




    <!--servlet的配置-->
    <servlet>
        <!--为servlet的内部名称，自定义-->
        <servlet-name>dispatcher</servlet-name>
        <!--servlet的类全名：包名+简单类名-->
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>

        <!--servlet对象的创建：在服务器启动时就创建该对象-->
        <load-on-startup>1</load-on-startup>
    </servlet>
    <!--servlet的映射配置-->
    <servlet-mapping>
        <!--servlet的内部名称，一定要和上面的内部名称保持一致-->
        <servlet-name>dispatcher</servlet-name>
        <!--servlet的映射路径（访问servlet的名称）-->
        <url-pattern>*.do</url-pattern>
    </servlet-mapping>

</web-app>

